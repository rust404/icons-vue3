const SVGO = require('svgo')
const fs = require('fs')
const path = require('path')

const svgo = new SVGO({
  plugins: [
    {
      removeXMLNS: true
    },
    {
      removeDimensions: true
    }
  ]
})

function run() {
  const base = './svgs'
  const dirs = ['regular', 'solid', 'brands']
  dirs.forEach(dirName => {
    transformSvgFromDir(path.resolve(base, dirName))
  })
}
run()

function transformSvgFromDir(dir) {
  fs.readdir(dir, (err, files) => {
    files.forEach(fileName => {
      if (!/\.svg$/.test(fileName)) return
      let componentName = fileName
        .replace(/\.svg$/, '')
        .replace(/^(.)/, (match, p1) => p1.toUpperCase())
        .replace(/\-(.)/g, (match, p1) => p1.toUpperCase())
      if (/svgs\/regular\/?$/.test(dir)) {
        componentName += 'Regular'
      }
      transformSvgToVue(path.resolve(dir, fileName), './src/icons', componentName)
    })
  })
}

function transformSvgToVue(filePath, outputDir, componentName) {
  if (!fs.existsSync(outputDir)) {
    fs.mkdirSync(outputDir)
  }
  fs.readFile(filePath, function (err, data) {
    svgo.optimize(data, {path: filePath}).then((ret) => {

      const template = `<template>
  <w-icon v-bind="$attrs">
    ${ret.data}
  </w-icon>
</template>

<script>
/* This file is auto generated by generateIcon.js */
import WIcon from '../index.js'

export default {
  name: '${componentName}',
  components: {
    WIcon
  },
}
</script>
    `
      fs.writeFile(path.resolve(outputDir, `${componentName}.vue`), template, (err) => {

        if (err) {
          console.log(err)
        }
      })
    })
  })
}
